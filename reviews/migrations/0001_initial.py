# Generated by Django 4.2.2 on 2023-06-25 10:46

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("rooms", "0017_alter_roomtype_cover_image"),
    ]

    operations = [
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Created Date & Time"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Updated Date & Time"
                    ),
                ),
                (
                    "cleanliness",
                    models.PositiveSmallIntegerField(
                        help_text="How clean a room was.",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Cleanliness",
                    ),
                ),
                (
                    "accuracy",
                    models.PositiveSmallIntegerField(
                        help_text="How much did host provide accurate information about room.",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Accuracy",
                    ),
                ),
                (
                    "location",
                    models.PositiveSmallIntegerField(
                        help_text="Was location good or fair enough to reach out?",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Accuracy",
                    ),
                ),
                (
                    "communication",
                    models.PositiveSmallIntegerField(
                        help_text="How well did room host communicate with customers?",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Accuracy",
                    ),
                ),
                (
                    "check_in",
                    models.PositiveSmallIntegerField(
                        help_text="How easy was it for checking in?",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Accuracy",
                    ),
                ),
                (
                    "value",
                    models.PositiveSmallIntegerField(
                        help_text="Was it valuable enough compared to the price per night?",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="Accuracy",
                    ),
                ),
                (
                    "comment",
                    models.TextField(blank=True, null=True, verbose_name="Comment"),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="reviews",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Customer",
                    ),
                ),
                (
                    "room",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="reviews",
                        to="rooms.room",
                        verbose_name="Room",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
