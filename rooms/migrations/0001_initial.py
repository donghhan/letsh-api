# Generated by Django 4.2.1 on 2023-05-20 10:40

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="RoomAmenity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
            options={
                "verbose_name": "Room Amenity",
                "verbose_name_plural": "Room Amenities",
                "db_table": "amenities",
            },
        ),
        migrations.CreateModel(
            name="Room",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Created Date & Time"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, verbose_name="Updated Date & Time"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Name of accomodation should not exceed more than 50 characters.",
                        max_length=50,
                        verbose_name="Name",
                    ),
                ),
                (
                    "price_per_night",
                    models.PositiveSmallIntegerField(
                        help_text="Value of price per night should always be more than 1 no matter of currency.",
                        validators=[django.core.validators.MinValueValidator(1)],
                        verbose_name="Price per night",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("APARTMENTS", "Apartments"),
                            ("VILLAS", "Villas"),
                            ("BEACH HOUSES", "Beach Houses"),
                            ("HOTELS", "Hotels"),
                            ("RESORTS", "Resorts"),
                        ],
                        default="APARTMENTS",
                        max_length=100,
                    ),
                ),
                (
                    "guest",
                    models.PositiveSmallIntegerField(
                        help_text="Guest should include at least one person, and not exceed more than 100 people.",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="Maximum guests allowed",
                    ),
                ),
                (
                    "bedroom",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Number of bedrooms"
                    ),
                ),
                (
                    "bathroom",
                    models.PositiveSmallIntegerField(
                        default=1, verbose_name="Number of bathrooms"
                    ),
                ),
                (
                    "wifi",
                    models.BooleanField(
                        default=True,
                        help_text="Shows if Wi-Fi is available. Default is set to be True.",
                        verbose_name="Wi-Fi",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Can be omitted.",
                        null=True,
                        verbose_name="Description",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rooms",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Owner",
                    ),
                ),
            ],
            options={
                "verbose_name": "Room",
                "verbose_name_plural": "Rooms",
                "db_table": "rooms",
            },
        ),
    ]
